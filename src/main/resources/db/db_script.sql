-- MySQL Script generated by MySQL Workbench
-- Sub 26 Feb 2022 15:05:38
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema conference_platform
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `conference_platform` ;

-- -----------------------------------------------------
-- Schema conference_platform
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `conference_platform` ;
USE `conference_platform` ;

-- -----------------------------------------------------
-- Table `conference_platform`.`country`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`country` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_platform`.`city`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`city` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `country_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  INDEX `fk_city_country_idx` (`country_id` ASC) VISIBLE,
  CONSTRAINT `fk_city_country`
    FOREIGN KEY (`country_id`)
    REFERENCES `conference_platform`.`country` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_platform`.`location_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`location_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_platform`.`location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`location` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `active` TINYINT NOT NULL DEFAULT 1,
  `address` VARCHAR(255) NOT NULL,
  `room` VARCHAR(255) NULL,
  `city_id` INT NULL,
  `location_type_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_location_city1_idx` (`city_id` ASC) VISIBLE,
  INDEX `fk_location_location_type1_idx` (`location_type_id` ASC) VISIBLE,
  CONSTRAINT `fk_location_city1`
    FOREIGN KEY (`city_id`)
    REFERENCES `conference_platform`.`city` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_location_location_type1`
    FOREIGN KEY (`location_type_id`)
    REFERENCES `conference_platform`.`location_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_platform`.`visitor_rating_schema`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`visitor_rating_schema` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_platform`.`conference`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`conference` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `start` DATETIME NOT NULL,
  `end` DATETIME NULL,
  `description` TEXT NULL,
  `visitor_rating_schema_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_conference_visitor_rating_schema1_idx` (`visitor_rating_schema_id` ASC) VISIBLE,
  CONSTRAINT `fk_conference_visitor_rating_schema1`
    FOREIGN KEY (`visitor_rating_schema_id`)
    REFERENCES `conference_platform`.`visitor_rating_schema` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_platform`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(255) CHARACTER SET 'ascii' NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `first_name` VARCHAR(255) NOT NULL,
  `last_name` VARCHAR(255) NOT NULL,
  `active` TINYINT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_platform`.`session`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`session` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `start` DATETIME NOT NULL,
  `end` DATETIME NULL,
  `conference_id` INT NOT NULL,
  `moderator_id` INT NOT NULL,
  `active` TINYINT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  INDEX `fk_session_conference1_idx` (`conference_id` ASC) VISIBLE,
  INDEX `fk_session_user1_idx` (`moderator_id` ASC) VISIBLE,
  CONSTRAINT `fk_session_conference1`
    FOREIGN KEY (`conference_id`)
    REFERENCES `conference_platform`.`conference` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_session_user1`
    FOREIGN KEY (`moderator_id`)
    REFERENCES `conference_platform`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_platform`.`event_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`event_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_platform`.`event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`event` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `active` TINYINT NOT NULL DEFAULT 1,
  `start` DATETIME NOT NULL,
  `end` DATETIME NULL,
  `access_code` VARCHAR(255) NULL,
  `location_id` INT NOT NULL,
  `session_id` INT NULL,
  `moderator_id` INT NOT NULL,
  `event_type_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_event_location1_idx` (`location_id` ASC) VISIBLE,
  INDEX `fk_event_session1_idx` (`session_id` ASC) VISIBLE,
  INDEX `fk_event_user1_idx` (`moderator_id` ASC) VISIBLE,
  INDEX `fk_event_event_type1_idx` (`event_type_id` ASC) VISIBLE,
  CONSTRAINT `fk_event_location1`
    FOREIGN KEY (`location_id`)
    REFERENCES `conference_platform`.`location` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_session1`
    FOREIGN KEY (`session_id`)
    REFERENCES `conference_platform`.`session` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_user1`
    FOREIGN KEY (`moderator_id`)
    REFERENCES `conference_platform`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_event_type1`
    FOREIGN KEY (`event_type_id`)
    REFERENCES `conference_platform`.`event_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_platform`.`resource_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`resource_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_platform`.`resource`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`resource` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `identifier` VARCHAR(255) NULL,
  `description` TEXT NULL,
  `resource_type_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_resource_resource_type1_idx` (`resource_type_id` ASC) VISIBLE,
  CONSTRAINT `fk_resource_resource_type1`
    FOREIGN KEY (`resource_type_id`)
    REFERENCES `conference_platform`.`resource_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_platform`.`event_has_resource`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`event_has_resource` (
  `event_id` INT NOT NULL,
  `resource_id` INT NOT NULL,
  `start` DATETIME NOT NULL,
  `end` DATETIME NOT NULL,
  PRIMARY KEY (`event_id`, `resource_id`),
  INDEX `fk_event_has_resource_resource1_idx` (`resource_id` ASC) VISIBLE,
  INDEX `fk_event_has_resource_event1_idx` (`event_id` ASC) VISIBLE,
  CONSTRAINT `fk_event_has_resource_event1`
    FOREIGN KEY (`event_id`)
    REFERENCES `conference_platform`.`event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_has_resource_resource1`
    FOREIGN KEY (`resource_id`)
    REFERENCES `conference_platform`.`resource` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_platform`.`visitor_rating_property`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`visitor_rating_property` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  `range_start` INT NOT NULL,
  `range_end` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_platform`.`visitor_rating_schema_has_visitor_rating_property`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`visitor_rating_schema_has_visitor_rating_property` (
  `visitor_rating_schema_id` INT NOT NULL,
  `visitor_rating_property_id` INT NOT NULL,
  PRIMARY KEY (`visitor_rating_schema_id`, `visitor_rating_property_id`),
  INDEX `fk_visitor_rating_schema_has_visitor_rating_property_visito_idx` (`visitor_rating_property_id` ASC) VISIBLE,
  INDEX `fk_visitor_rating_schema_has_visitor_rating_property_visito_idx1` (`visitor_rating_schema_id` ASC) VISIBLE,
  CONSTRAINT `fk_visitor_rating_schema_has_visitor_rating_property_visitor_1`
    FOREIGN KEY (`visitor_rating_schema_id`)
    REFERENCES `conference_platform`.`visitor_rating_schema` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_visitor_rating_schema_has_visitor_rating_property_visitor_2`
    FOREIGN KEY (`visitor_rating_property_id`)
    REFERENCES `conference_platform`.`visitor_rating_property` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_platform`.`visitor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`visitor` (
  `id` INT NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_platform`.`attendance`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`attendance` (
  `visitor_id` INT NOT NULL,
  `conference_id` INT NOT NULL,
  PRIMARY KEY (`visitor_id`, `conference_id`),
  INDEX `fk_attendance_visitor1_idx` (`visitor_id` ASC) VISIBLE,
  INDEX `fk_attendance_conference1_idx` (`conference_id` ASC) VISIBLE,
  CONSTRAINT `fk_attendance_visitor1`
    FOREIGN KEY (`visitor_id`)
    REFERENCES `conference_platform`.`visitor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_attendance_conference1`
    FOREIGN KEY (`conference_id`)
    REFERENCES `conference_platform`.`conference` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_platform`.`attendance_rating`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `conference_platform`.`attendance_rating` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `rating` INT NULL,
  `attendance_visitor_id` INT NOT NULL,
  `attendance_conference_id` INT NOT NULL,
  `visitor_rating_property_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_attendance_rating_attendance1_idx` (`attendance_visitor_id` ASC, `attendance_conference_id` ASC) VISIBLE,
  INDEX `fk_attendance_rating_visitor_rating_property1_idx` (`visitor_rating_property_id` ASC) VISIBLE,
  CONSTRAINT `fk_attendance_rating_attendance1`
    FOREIGN KEY (`attendance_visitor_id` , `attendance_conference_id`)
    REFERENCES `conference_platform`.`attendance` (`visitor_id` , `conference_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_attendance_rating_visitor_rating_property1`
    FOREIGN KEY (`visitor_rating_property_id`)
    REFERENCES `conference_platform`.`visitor_rating_property` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
